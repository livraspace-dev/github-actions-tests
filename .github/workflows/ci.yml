name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
      SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Verify Cypress installation
        run: npx cypress --version

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Cypress tests with recording
        continue-on-error: true  # Permite que el flujo continúe incluso si las pruebas fallan
        run: |
          npx cypress run --record --key $CYPRESS_RECORD_KEY | tee cypress_output.txt

      - name: Print Cypress output for debugging
        run: cat cypress_output.txt

      - name: Extract Cypress Dashboard URL
        run: |
          # Eliminar códigos de color del output
          CLEAN_OUTPUT=$(sed -r 's/\x1B\[[0-9;]*[mG]//g' cypress_output.txt)
          # Extraer la URL del Dashboard
          CYPRESS_URL=$(echo "$CLEAN_OUTPUT" | grep 'Run URL:' | sed 's/.*Run URL:\s*//; s/\s*$//')
          echo "CYPRESS_URL es $CYPRESS_URL"
          echo "CYPRESS_DASHBOARD_URL=$CYPRESS_URL" >> $GITHUB_ENV
        shell: bash

      - name: Print Cypress Dashboard URL
        run: |
          echo "CYPRESS_DASHBOARD_URL=${{ env.CYPRESS_DASHBOARD_URL }}"
        shell: bash

      - name: Get latest release URL
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.html_url')
          echo "LATEST_RELEASE_URL=$LATEST_RELEASE_URL" >> $GITHUB_ENV
        shell: bash
        continue-on-error: true

      - name: Send notification to Slack
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
          LATEST_RELEASE_URL: ${{ env.LATEST_RELEASE_URL }}
          CYPRESS_DASHBOARD_URL: ${{ env.CYPRESS_DASHBOARD_URL }}
        run: |
          if [ -z "$CYPRESS_DASHBOARD_URL" ]; then
            MESSAGE="El flujo de trabajo de CI se ha completado, pero no se pudo obtener la URL del Dashboard de Cypress."
          else
            MESSAGE="El flujo de trabajo de CI se ha completado. Revisa los resultados de las pruebas: $CYPRESS_DASHBOARD_URL"
          fi

          if [ -n "$LATEST_RELEASE_URL" ]; then
            MESSAGE="$MESSAGE y el último release: $LATEST_RELEASE_URL"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK
        shell: bash
