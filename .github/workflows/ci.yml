name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Cypress tests with recording
        id: cypress
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        run: |
          npx cypress run --record --key $CYPRESS_RECORD_KEY | tee cypress_output.txt

      - name: Print Cypress output for debugging
        run: cat cypress_output.txt

      - name: Extract Cypress Dashboard URL
        id: extract_url
        run: |
          CYPRESS_URL=$(grep -oE 'https://dashboard.cypress.io/projects/[^ ]+/runs/[^ ]+' cypress_output.txt | head -n 1)
          echo "CYPRESS_DASHBOARD_URL=$CYPRESS_URL" >> $GITHUB_ENV
        shell: bash

      - name: Get latest release URL
        id: get_release
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.html_url')
          echo "LATEST_RELEASE_URL=$LATEST_RELEASE_URL" >> $GITHUB_ENV
        shell: bash

      - name: Send notification to Slack
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
          LATEST_RELEASE_URL: ${{ env.LATEST_RELEASE_URL }}
          CYPRESS_DASHBOARD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"El flujo de trabajo de CI se ha completado. Revisa los resultados de las pruebas: $CYPRESS_DASHBOARD_URL y el Ãºltimo release: $LATEST_RELEASE_URL\"}" $SLACK_WEBHOOK
        shell: bash