name: CI Workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
      SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Cypress tests and capture Dashboard URL
        if: github.event_name != 'workflow_dispatch'
        continue-on-error: true
        run: |
          npx cypress run --record --key $CYPRESS_RECORD_KEY | tee cypress_output.txt
          CLEAN_OUTPUT=$(sed -r 's/\x1B\[[0-9;]*[mG]//g' cypress_output.txt)
          CYPRESS_URL=$(echo "$CLEAN_OUTPUT" | grep 'Run URL:' | sed 's/.*Run URL:\s*//; s/\s*$//')
          if [ -n "$CYPRESS_URL" ]; then
            echo "$CYPRESS_URL" > cypress_url_cache.txt
          fi

      - name: Save Cypress Dashboard URL artifact
        if: github.event_name != 'workflow_dispatch'
        uses: actions/upload-artifact@v3
        with:
          name: cypress-url
          path: cypress_url_cache.txt

      - name: Load Cypress Dashboard URL from artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/download-artifact@v3
        with:
          name: cypress-url
          path: .

      - name: Set Cypress Dashboard URL environment variable
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ -f cypress_url_cache.txt ]; then
            CYPRESS_DASHBOARD_URL=$(cat cypress_url_cache.txt)
            echo "CYPRESS_DASHBOARD_URL=$CYPRESS_DASHBOARD_URL" >> $GITHUB_ENV
          else
            echo "No se encontró una URL de Cypress previa."
          fi

      - name: Get latest release URL
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.html_url')
          echo "LATEST_RELEASE_URL=$LATEST_RELEASE_URL" >> $GITHUB_ENV
        shell: bash
        continue-on-error: true

      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
          CYPRESS_DASHBOARD_URL: ${{ env.CYPRESS_DASHBOARD_URL }}
          LATEST_RELEASE_URL: ${{ env.LATEST_RELEASE_URL }}
        run: |
          if [ -z "$CYPRESS_DASHBOARD_URL" ]; then
            MESSAGE="El flujo de trabajo de CI se ha completado, pero no se pudo obtener la URL del último test de Cypress."
          else
            MESSAGE="El flujo de trabajo de CI se ha completado. Revisa los resultados de las pruebas: $CYPRESS_DASHBOARD_URL"
          fi

          if [ -n "$LATEST_RELEASE_URL" ]; then
            MESSAGE="$MESSAGE y el último release: $LATEST_RELEASE_URL"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK
