name: CI Workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
      SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Extract last Cypress Dashboard URL
        run: |
          LAST_CYPRESS_URL=$(gh run view --json logs_url -q '.logs_url' | xargs curl -s | grep 'Run URL:' | sed 's/.*Run URL:\s*//; s/\s*$//')
          if [ -z "$LAST_CYPRESS_URL" ]; then
            echo "No se encontró una URL del último test de Cypress."
          else
            echo "Última Cypress URL: $LAST_CYPRESS_URL"
            echo "CYPRESS_DASHBOARD_URL=$LAST_CYPRESS_URL" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Get latest release URL
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.html_url')
          echo "LATEST_RELEASE_URL=$LATEST_RELEASE_URL" >> $GITHUB_ENV
        shell: bash
        continue-on-error: true

      - name: Send notification to Slack
        if: github.event_name == 'workflow_dispatch'
        env:
          SLACK_WEBHOOK: ${{ secrets.CYPRESSNOTIFIER }}
          LATEST_RELEASE_URL: ${{ env.LATEST_RELEASE_URL }}
          CYPRESS_DASHBOARD_URL: ${{ env.CYPRESS_DASHBOARD_URL }}
        run: |
          if [ -z "$CYPRESS_DASHBOARD_URL" ]; then
            MESSAGE="El flujo de trabajo de CI se ha completado, pero no se pudo obtener la URL del Dashboard de Cypress."
          else
            MESSAGE="El flujo de trabajo de CI se ha completado. Revisa los resultados de las pruebas: $CYPRESS_DASHBOARD_URL"
          fi

          if [ -n "$LATEST_RELEASE_URL" ]; then
            MESSAGE="$MESSAGE y el último release: $LATEST_RELEASE_URL"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK
        shell: bash
